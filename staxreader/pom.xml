<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>staxreader</groupId>
	<artifactId>staxreader</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<project.build.name>staxreader-dev</project.build.name>
	</properties>
	<build>
		<finalName>${project.build.name}</finalName>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>1.3-SNAPSHOT</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->

							<webappDirectory>${project.build.directory}/${project.build.name}/VAADIN/widgetsets</webappDirectory>
							<!-- On Mac running Snow Leopard, add "-d32" -->
							<!--
								This causes error messages (but build works) in phase "package":
								two processes would use the same debug port
							-->
							<!--
								extraJvmArgs>-Xmx512M -Xss1024k -Xdebug
								-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8998</extraJvmArgs
							-->
							<extraJvmArgs>-Xmx1024M -Xss1024k</extraJvmArgs>
							<hostedWebapp>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</hostedWebapp>
							<noServer>true</noServer>
							<port>8080</port>
						</configuration>
						<goals>
							<goal>resources</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
				Plugin in charge of copying neccessary dependencies to target
				directory. These dependencies are needed in the target dictory in
				order for the applet to work
			-->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<!-- Specify dependencies we want in the target directory -->
						<configuration>
							<outputDirectory>${project.build.directory}/${project.build.name}/VAADIN/widgetsets/com.vaadin.jung.GwtG2DWrapper</outputDirectory>
							<artifactItems>
								<artifactItem>
									<groupId>org.vaadin.addons</groupId>
									<artifactId>gwt-graphics</artifactId>
									<version>0.9.7</version>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--
				A simple Jetty test server at
				http://localhost:8080/project-basicjung can be launched with the
				Maven goal jetty:run and stopped with jetty:stop
			-->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.19</version>
				<configuration>
					<stopPort>9966</stopPort>
					<stopKey>wbc</stopKey>
					<!--
						Redeploy every x seconds if changes are detected, 0 for no
						automatic redeployment
					-->
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<!-- make sure Jetty also finds the widgetset -->
					<webAppConfig>
						<contextPath>/xmlreader-wrapper</contextPath>
						<baseResource implementation="org.mortbay.resource.ResourceCollection">
							<!--
								Workaround for Maven/Jetty issue
								http://jira.codehaus.org/browse/JETTY-680
							-->
							<!--
								<resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources>
							-->
							<resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.name}</resourcesAsCSV>
						</baseResource>
					</webAppConfig>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!-- genereted jar repository -->
	<distributionManagement>
		<!-- defines where the generated documentation should go -->
		<site>
			<id>google.download</id>
			<name>wholebrain googlecode scm</name>
			<url>scm:svn:https://connectome.googlecode.com/hg/site/mcb</url>
		</site>
		<repository>
			<id>google.code</id>
			<name>Google code</name>
			<url>https://connectome.googlecode.com/hg/mcb/</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshots</name>
			<url>http://openccdb.org:8081/nexus/content/repositories/snapshots
                        </url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies><!-- verified jung 2.0 -->
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-algorithms</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-jai</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-visualization</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-io</artifactId>
			<version>2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>2.0.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>gwt-maven-plugin</artifactId>
			<version>1.3-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>canvaswidget</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>gwt-graphics</artifactId>
			<version>0.9.7</version>
		</dependency>
		<dependency>
			<groupId>colt</groupId>
			<artifactId>colt</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>concurrent</groupId>
			<artifactId>concurrent</artifactId>
			<version>1.3.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse</groupId>
			<artifactId>swt</artifactId>
			<version>3.2.1-v3235e</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.swt.win32.win32</groupId>
			<artifactId>x86</artifactId>
			<version>3.2.1-v3235</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>jung</groupId>
			<artifactId>jung</artifactId>
			<version>1.7.6</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.0.1-FINAL</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.5-FINAL</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>3.0.1-FINAL</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.13 </version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.8</version>
		</dependency>
		<dependency>
			<groupId>stax</groupId>
			<artifactId>stax</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.xml.stream</groupId>
			<artifactId>stax-api</artifactId>
			<version>1.0-2</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.collections</groupId>
			<artifactId>collections-generic</artifactId>
			<version>4.01</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>colt</groupId>
			<artifactId>colt</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swing-layout</artifactId>
			<version>1.0.3</version>
			<scope>test</scope>
		</dependency>

		<!-- verified jung 2.0 -->
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-algorithms</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-jai</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-visualization</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>com.cedarsoft.commons</groupId>
			<artifactId>objectaccess</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-io</artifactId>
			<version>2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>concurrent</groupId>
			<artifactId>concurrent</artifactId>
			<version>1.3.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>2.0.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>icepush</artifactId>
			<version>0.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin</groupId>
			<artifactId>icepush-gwt</artifactId>
			<version>0.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin</groupId>
			<artifactId>icepush-util</artifactId>
			<version>0.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>2.0.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>gwt-maven-plugin</artifactId>
			<version>1.3-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>canvaswidget</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>gwt-graphics</artifactId>
			<version>0.9.7</version>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>
</project>
