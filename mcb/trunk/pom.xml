<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>mcb</groupId>
	<artifactId>mcb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<scm>
		<connection>scm:svn:http://wholebrain.googlecode.com/svn/mcb/trunk</connection>
		<developerConnection>scm:svn:https://wholebrain.googlecode.com/svn/mcb/trunk</developerConnection>
		<url>http://code.google.com/p/wholebrain/source/checkout</url>
	</scm>
	<build>
		<plugins>
			<!--
				Just defines how you want compilation of java classes to happen
			-->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<!-- run with: mvn release:prepare , and then : mvn release:perform -->
			<!-- pre reqs: 'mvn' and 'svn' must both work on the command line -->
			<!--
				recommended that you do not use the embedded eclipse version of
				maven
			-->
			<!--
				instead, install the latest version on your system and run the
				external version
			-->
			<!-- should set JAVA_HOME to point to java and "MAVEN_OPTS=-Xmx768m" -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.0-beta-9</version>
				<configuration>
					<tagBase>
						https://wholebrain.googlecode.com/svn/mcb/tags
					</tagBase>
					<!--
						triggers the profile below called 'release', which causes
						release:perform to send the released versions of the jars to the
						maven repository, rather than to the Google code SVN repository
						(where the tag goes)
					-->
					<releaseProfiles>release</releaseProfiles>
					<!-- solves problem of not having jars installed -->
					<!-- see http://tinyurl.com/7dfbx2 for more -->
					<preparationGoals>clean verify install</preparationGoals>
					<!-- uncomment below when ready to deploy the site regularly -->
					<!-- <goals>package deploy site-deploy</goals> -->
					<goals>deploy</goals>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<distributionManagement>
		<!-- defines where the generated documentation should go -->
		<site>
			<id>google.download</id>
			<name>wholebrain googlecode scm</name>
			<url>scm:svn:https://wholebrain.googlecode.com/svn/site/mcb
			</url>
		</site>
		<repository>
			<id>releases</id>
			<name>Internal Releases</name>
			<url>http://openccdb.org:8081/nexus/content/repositories/releases
			</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshots</name>
			<url>http://openccdb.org:8081/nexus/content/repositories/snapshots
			</url>
		</snapshotRepository>
	</distributionManagement>
	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo.webstart</groupId>
						<artifactId>webstart-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
								</goals>
							</execution>
						</executions>
						<configuration>
							<!--outputDirectory></outputDirectory--> <!-- not required?? -->

							<!--
								Set to true to exclude all transitive dependencies. Default is
								false.
							-->
							<excludeTransitive>false</excludeTransitive>

							<!--
								The path where the libraries are stored within the jnlp
								structure. not required. by default the libraries are within the
								working directory
							-->
							<libPath>lib</libPath>

							<!-- JNLP generation -->

							<jnlp>
								<!-- default values -->
								<!--
									inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath
								-->
								<outputFile>MultiScaleConnectomeBrowser.jnlp</outputFile> <!-- defaults to launch.jnlp -->

								<!--
									used to automatically identify the jar containing the main
									class.
								-->
								<!-- this is perhaps going to change -->
								<mainClass>MultiScaleConnectomeBrowser</mainClass>
							</jnlp>

							<!-- SIGNING -->
							<!--
								defining this will automatically sign the jar and its
								dependencies, if necessary
							-->
							<sign>
								<keystore>keystore</keystore>
								<keypass>m2m2m2</keypass>
								<alias>m2m2m2</alias>
								<!--
									we need to override passwords easily from the command line.
									${keypass}
								-->
								<storepass>m2m2m2</storepass> <!-- ${storepass} -->
								<dnameCn>www.wholebraincatalog.org</dnameCn>
								<dnameOu>None</dnameOu>
								<dnameO>Whole Brain Project</dnameO>
								<dnameL>La Jolla</dnameL>
								<dnameSt>California</dnameSt>
								<dnameC>US</dnameC>

								<verify>true</verify> <!-- verify that the signing operation succeeded -->

								<!-- KEYSTORE MANAGEMENT -->
								<keystoreConfig>
									<delete>true</delete> <!-- delete the keystore -->
									<gen>true</gen>       <!-- optional shortcut to generate the store. -->
								</keystoreConfig>
							</sign>

							<!--
								neither of these work to unsign jars that were signed by some
								other key than the one we generate :(
							-->
							<!-- <unsign>true</unsign> -->
							<!-- <unsignAlreadySignedJars>true</unsignAlreadySignedJars> -->

							<!-- BUILDING PROCESS -->

							<pack200>false</pack200>
							<gzip>false</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->

							<!--
								causes a version attribute to be output in each jar resource
								element, optional, default is false
							-->
							<outputJarVersions>false</outputJarVersions>

							<!--install>false</install--> <!-- not yet supported -->
							<verbose>true</verbose>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.wholebrainproject</groupId>
			<artifactId>wbc-core</artifactId>
			<version>0.7.0.6</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.0.4</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-visualization</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-algorithms</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.collections</groupId>
			<artifactId>collections-generic</artifactId>
			<version>4.01</version>
			<scope>compile</scope>
		</dependency>
		<!-- verified org.wholebraincatalog.com.piccolox 1.0.0 -->
		<dependency>
			<groupId>org.wholebraincatalog.com.piccolox</groupId>
			<artifactId>piccolox</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- verified org.piccolo2d 1.2.1 -->
		<dependency>
			<groupId>org.piccolo2d</groupId>
			<artifactId>piccolo2d-core</artifactId>
			<version>1.2.1</version>
		</dependency>
		<!-- verified jgoodies.forms 1.0.5 -->
		<dependency>
			<groupId>jgoodies</groupId>
			<artifactId>forms</artifactId>
			<version>1.0.5</version>
		</dependency>
		<!-- verified jung 1.6.0 -->
		<dependency>
			<groupId>jung</groupId>
			<artifactId>jung</artifactId>
			<version>1.6.0</version>
		</dependency>
		<!-- verified junit 3.8.2 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.2</version>
		</dependency>
		<!-- verified org.wholebraincatalog.com.jgoodies looks 1.3.1 -->
		<dependency>
			<groupId>org.wholebraincatalog.com.jgoodies</groupId>
			<artifactId>looks</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- May need some review -->
		<dependency>
			<groupId>com.hp.hpl.guess</groupId>
			<artifactId>Guess</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- May need some review -->
		<dependency>
			<groupId>org.python</groupId>
			<artifactId>jython</artifactId>
			<version>2.2</version>
		</dependency>
		<!-- May need some review -->
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.0.9</version>
		</dependency>
	</dependencies>
</project>
