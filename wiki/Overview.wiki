#summary Overview

= Multi-Scale Connectome Browser. =

This document will describe the development of the Multi-Scale Connectome Browser or MCB(mcb).  MCB is still in its infancy but the goal of the project is to construct a software system that generates interactive diagrams of brain networks at multiple levels of analysis.  You can see [http://screenr.com/ivh a short clip] of its alpha form online. 

== Running Java Network Launching Protocol ==

You can [http://ccdb-dev-db2.crbs.ucsd.edu/multi-scale-connectome-browser-0.1.7-stable/BuildConnections.jnlp run the latest version] from your browser.  This server contains the JNLP for the mcb application. 

You will be prompted to open the JNLP file with Java's Web Start Launcher.  If this is not the case choose Java's Web Start Launcher by selecting "Open with" and choosing the application from the scroll bar.  Once the above step is completed click "OK" and "Run".

== How to Install ==

===From Eclipse===

I. First, install and download eclipse and the Maven Plugin [http://openccdb.org/wiki/index.php/Brain_Catalog_Eclipse_Installation Instructions Here].
# Checkout a new project from SVN; http://wholebrain.googlecode.com/svn/mcb/trunk.
## Window->Show View->Other...
## Choose SVN->SVN Repository.
## Right click within the SVN Repository View that comes up and click New->Repository Location...
## put: https://wholebrain.googlecode.com/svn/ If asked about a digital certificate, Accept Permanently.
## Navigate down to, and right click on the mcb/ folder and choose Checkout...
### You will be prompted to check out the project. Choose "Check out as a project configured using the New Project Wizard".
### In the "New Project" window that pops up, select Java->Java Project and hit Next.
### In the next window, pick a project name you like (for example, "mcb")
### Click "Finish" and hit OK to any windows that popup. 

# Right-click on the project, and from the Maven submenu, click "enable dependency management".
# Right click on the project and look at Build path...->Java Build Path->Libraries tab. Click on the arrow to open up the JRE system library. Make sure this is pointing to a jdk 1.5 that is loaded on your machine. If it isn't, then press the Add Library... button and install a new JRE System library that does point to 1.5. On windows, its usually under C:\Program Files\Java. If you can't find a 1.5 JDK, you'll need to download it.
# Create a new run configuration.
## Select Run > Run Configurations:
## Under "Maven", create a new run configuration. Name it "clean install". Make the workspace the root under your new project. In the box called "goals" type "clean install". Run this.

== How to Run ==
=== From Eclipse ===
Under eclipse, right click on the folder containing your hello world application.  Scroll down and under the "Run As" option click on "Java Application".

=== From a command line ===

We use Maven to build our code.  The first thing to know about Maven is that it provides the "single command" ability to build an entire code base.  With [http://subversion.tigris.org/ SVN] and [http://maven.apache.org/ Maven] installed you can issue the following commands to download and build the entire source:

<pre>
svn co http://wholebrain.googlecode.com/svn/mcb/trunk mcb
cd mcb
mvn clean install
</pre>

The one caveat to this is that you need to place a single configuration file called settings.xml in your Maven directory.  Your Maven directory is located at ~/.m2 on linux/mac, C:\Users\[username]\.m2 on Vista, and C:\Documents and settings\[username]\.m2 in Windows XP.  You can download our copy of the settings.xml file [[Maven2_settings.xml |here]].

After this is finished (will say BUILD SUCCESSFUL), you'll find within mcb/target a file called MultiScaleConnectomeBrowser-X.X.X-SNAPSHOT-release.zip (X.X.X is in place of version numbers).  Unzip this and you should find a run.bat file and a run.sh file.  Use the run.sh file to run in Linux/Unix and the run.bat file to run in Windows.

== Useful links ==
* [http://jung.sourceforge.net/ JUNG] - the graphing library this is built on.
* [http://jung.sourceforge.net/doc/api/index.html JUNG java docs]
* [http://jung.cvs.sourceforge.net/viewvc/jung/jung2/jung-samples/src/main/java/edu/uci/ics/jung/samples/ Examples in JUNG 2]
* [http://www.grotto-networking.com/JUNG/JUNG2-Tutorial.pdf JUNG 2 tutorial]